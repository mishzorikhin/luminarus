#include <ESP8266WiFi.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWebServer.h>
#include <Adafruit_NeoPixel.h>


const char *ssid = "Kukushonok";
const char *password = "mumurka123";

int modeValue = 0;
int arg1Value = 0;
int arg2Value = 0;

#define PIN            D2
#define NUMPIXELS      40
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

AsyncWebServer server(80);

int brightness = 50;
int treeWinght = 7;
int speedChristmasTree = 1000;

void setup() {

  strip.begin();
  strip.show();

  Serial.begin(115200);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  server.on("/change_mode", HTTP_GET, [](AsyncWebServerRequest * request) {
    modeValue = request->getParam("mode")->value().toInt();
    arg1Value = request->getParam("arg1")->value().toInt();
    arg2Value = request->getParam("arg2")->value().toInt();

    request->send(200, "text/plain", String(modeValue) + String(arg1Value) + String(arg2Value));
  });

  server.begin();
}

void loop() {
  Serial.println(modeValue);
  switch (modeValue) {
    case 1:
      for (int i = 0; i < 255; i++) {
        Serial.println(modeValue);
        if (modeValue == 1) {
          Serial.println(arg1Value);
          Serial.println(arg2Value);
        }
        else {
          break;
        }
        delay(500);
      }

      break;
    case 2:
      foxTree(arg1Value, arg2Value);

      break;
    case 3:
      christmasTree(arg1Value, arg2Value);

      break;
    default:
      Serial.println("LOW");
      break;
  }
}

void foxTree(int treeWidth, int holdDuration) {
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 255, 0));
  }

  for (int i = 0; i < treeWidth; i++) {
    int randomIndex = random(strip.numPixels());
    //    strip.setPixelColor(randomIndex, strip.Color(random(256), random(256), random(256)));
    strip.setPixelColor(randomIndex, strip.Color(255, 99, 0));
  }

  strip.setBrightness(brightness);
  strip.show();
  delay(holdDuration);

  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 0, 0));
  }
}

void christmasTree(int treeWidth, int holdDuration) {
 // Выключаем все светодиоды
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 0, 0));
  }
  strip.show();


  // Зажигаем все светодиоды зеленым цветом
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 255, 0));  // Зеленый цвет
  }

  int randomIndexes[NUMPIXELS];
  for (int i = 0; i < NUMPIXELS; i++) {
    randomIndexes[i] = random(treeWidth);
    Serial.write(randomIndexes[i]);
  }

  // Зажигаем светодиоды по случайным индексам разными цветами
  for (int i = 0; i < NUMPIXELS; i++) {
    int randomIndex = randomIndexes[i];
    int pixelColor = strip.Color(random(256), random(256), random(256));
    strip.setPixelColor(randomIndex, pixelColor);
  }

  strip.setBrightness(brightness);
  strip.show();
  delay(holdDuration);  // Задержка для удержания состояния елочки

  // Выключаем все светодиоды перед следующей итерацией
  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, strip.Color(0, 0, 0));
  }
}
