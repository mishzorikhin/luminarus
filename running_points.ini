#include <FastLED.h>

#define NUM_LEDS 210
#define DATA_PIN D2

CRGB leds[NUM_LEDS];

#define NUM_POINTS 13          // Количество точек
#define MOVE_SPEED 1           // Скорость движения точек
#define COLOR_CHANGE_SPEED 5   // Скорость изменения цвета точек

int points[NUM_POINTS];       // Позиции точек
int directions[NUM_POINTS];   // Направления движения точек
CRGB pointColors[NUM_POINTS]; // Цвета точек

void setup() {
  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
  
  // Инициализация начальных позиций, направлений и цветов точек
  for (int i = 0; i < NUM_POINTS; i++) {
    points[i] = random(NUM_LEDS);
    directions[i] = random(2) == 0 ? 1 : -1; // 1 - двигаться вправо, -1 - двигаться влево
    changeColor(i); // Установка уникального цвета для каждой точки
  }
}

void loop() {
  runningLights();
}

void runningLights() {
  // Сдвигаем точки в соответствии с направлением
  for (int i = 0; i < NUM_POINTS; i++) {
    points[i] = (points[i] + directions[i] * MOVE_SPEED + NUM_LEDS) % NUM_LEDS;
    // Меняем цвет точек
    leds[points[i]] = pointColors[i];
  }

  changeColors(); // Обновление цветов точек

  // Затухание остальных светодиодов
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i].fadeToBlackBy(20);
  }

  FastLED.show();
  delay(100); // Управляйте скоростью анимации изменяя это значение
}

void changeColors() {
  // Обновляем цвета каждой точки
  for (int i = 0; i < NUM_POINTS; i++) {
    if (random8() < COLOR_CHANGE_SPEED) {
      changeColor(i);
    }
  }
}

void changeColor(int index) {
  // Устанавливаем уникальный цвет для точки
  pointColors[index] = CRGB(random(256), random(256), random(256));
}
